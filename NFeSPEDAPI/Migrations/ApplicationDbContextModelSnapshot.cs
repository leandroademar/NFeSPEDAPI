// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NFeSPEDAPI.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NFeSPEDAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NFeSPEDAPI.Models.NFe.NFeItemModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CFOP")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cfop");

                    b.Property<string>("CodigoProduto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_produto");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("NCM")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ncm");

                    b.Property<Guid>("NFeId")
                        .HasColumnType("uuid")
                        .HasColumnName("nfe_id");

                    b.Property<int>("NumeroItem")
                        .HasColumnType("integer")
                        .HasColumnName("numero_item");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric")
                        .HasColumnName("quantidade");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("unidade");

                    b.Property<decimal>("ValorICMS")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_icms");

                    b.Property<decimal>("ValorIPI")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_ipi");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_total");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_unitario");

                    b.HasKey("Id");

                    b.HasIndex("NFeId");

                    b.ToTable("nfe_itens");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.NFe.NFeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CNPJDestinatario")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj_destinatario");

                    b.Property<string>("CNPJEmitente")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj_emitente");

                    b.Property<string>("ChaveAcesso")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("chave_acesso");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_emissao");

                    b.Property<DateTime>("DataImportacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_importacao");

                    b.Property<string>("NomeDestinatario")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_destinatario");

                    b.Property<string>("NomeEmitente")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_emitente");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("numero");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("serie");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_total");

                    b.Property<string>("XmlCompleto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("xml_completo");

                    b.HasKey("Id");

                    b.ToTable("nfes");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.SPED.SpedBlocoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CodigoBloco")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_bloco");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<Guid>("SpedId")
                        .HasColumnType("uuid")
                        .HasColumnName("sped_id");

                    b.HasKey("Id");

                    b.HasIndex("SpedId");

                    b.ToTable("sped_blocos");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.SPED.SpedModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ArquivoCompleto")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("arquivo_completo");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cnpj");

                    b.Property<DateTime>("DataImportacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_importacao");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome_empresa");

                    b.Property<DateTime>("PeriodoFinal")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("periodo_final");

                    b.Property<DateTime>("PeriodoInicial")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("periodo_inicial");

                    b.HasKey("Id");

                    b.ToTable("sped_arquivos");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.SPED.SpedRegistroModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BlocoId")
                        .HasColumnType("uuid")
                        .HasColumnName("bloco_id");

                    b.Property<string>("CodigoRegistro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_registro");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("conteudo");

                    b.Property<int>("LinhaArquivo")
                        .HasColumnType("integer")
                        .HasColumnName("linha_arquivo");

                    b.HasKey("Id");

                    b.HasIndex("BlocoId");

                    b.ToTable("sped_registros");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.NFe.NFeItemModel", b =>
                {
                    b.HasOne("NFeSPEDAPI.Models.NFe.NFeModel", "NFe")
                        .WithMany("Itens")
                        .HasForeignKey("NFeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NFe");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.SPED.SpedBlocoModel", b =>
                {
                    b.HasOne("NFeSPEDAPI.Models.SPED.SpedModel", "Sped")
                        .WithMany("Blocos")
                        .HasForeignKey("SpedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sped");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.SPED.SpedRegistroModel", b =>
                {
                    b.HasOne("NFeSPEDAPI.Models.SPED.SpedBlocoModel", "Bloco")
                        .WithMany("Registros")
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bloco");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.NFe.NFeModel", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.SPED.SpedBlocoModel", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("NFeSPEDAPI.Models.SPED.SpedModel", b =>
                {
                    b.Navigation("Blocos");
                });
#pragma warning restore 612, 618
        }
    }
}
